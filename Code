#include <avr/io.h>
#include <avr/interrupt.h>
ISR(INT0_vect)// Вектор обработки внешнего прерывания INT0
{
	OCR0A=OCR0A+40;// Увеличение регистра совпадения OCR0A, для увеличения ширины сигнала лог 1. в пределах одного периода
}
ISR(INT1_vect)
{
	OCR0A=OCR0A-40;// Уменьшения значения регистра совпадения OCR0A, для уменьшения ширины сигнала лог 1. в пределах одного периода
}
int main(void)
{
	TCCR0A=0b10000011;// Настройка таймера 7 и 6 бит, выбор режима работы для выхода OC0A, 0 и 1 бит — настраивают работу таймера/счетчика в режиме быстрый шим
	TCCR0B=0b00000001;// Настройка пред делителя таймера/счетчика на деление частоты МК на 8, для уменьшения частоты формируемого ШИМ
	TCNT0=0x00; // Обнуление счатного регистра таймера/счетчика 0
	OCR0A=0x50;// Задание стартового значения регистра совпадения OCR0A, для того что бы при старте программы уже сразу формировался ШИМ сигнал
	DDRD=0x00;//Настройка порта D для работы с прерываниями, все ножки на вход
	PORTD=0b00001100;//Включение подтягивающих резисторов для ножек порта D, на которых работают прерывания INT0 и INT1
	DDRB=0b00000100;// Настройка на выход ножки, на которой будет формироваться ШИМ сигнал, OC0A
	MCUCR=0b00001010;// Настройка поведения INT0 и INT1, какие перепады сигналов считать вызовом прерывания, в данном случае по заднему фронту для обоих прерываний
	GIMSK=0b11000000;//Разрешение работы прерываний INT0 и INT1
	sei();
    while(1)
    {   
    }
}
